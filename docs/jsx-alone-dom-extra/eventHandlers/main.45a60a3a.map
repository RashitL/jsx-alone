{"version":3,"sources":["../../src/elementImpl.ts","../../src/elementClass.ts","../../src/createElement.ts","../../src/misc.tsx","../../src/util.ts","../../src/style.tsx","../../src/JsonImpl.ts","../../src/index.ts","../../src/mark.tsx","../../src/Refs.tsx","../../src/event.ts","../createElement.ts","../StatefulComponent.tsx","../DestructiveDomRenderComponent.tsx","../index.ts","main.tsx"],"names":[],"mappings":"ACiCsB,AD7BtB,AI0DA,IH7BsB,AG6BtB,EH7BsB,AG6BtB,GJ1DgB,EAA0B,CC6BpB,AG6BtB,EJzDS,GC4Ba,AG6BtB,IJzDS,EAAE,IIyDX,CH7BsB,MD5BE,EAAE,EIyD1B,CH7BsB,IAAA,EAAA,AG6BtB,CJzDoC,CIyDpC,MJtDA,CCyBsB,AG6BtB,EH7BsB,GAAA,GDzBN,AIsDhB,EJtD0B,ECyBJ,CDxBb,CCwBa,GG6BtB,GJrDS,AIqDT,CH7BsB,CDxBE,EIqDxB,EJrD8B,EAAc,AIqD5C,EAAA,CJlDA,CIkDA,EAAA,EAAA,CH7BsB,CAAA,EDrBN,EAAiB,GACxB,CIiDT,EH7BsB,IDpBb,CIiDT,EJjDc,AIiDd,EJjDgB,AIiDhB,IAAA,CH7BsB,GG6BtB,IH7BsB,AG6BtB,CJ9CA,II8CA,EAAA,EH7BsB,CDjBN,CCiBM,CDjBY,ECiBZ,CDhBb,CCgBa,CG6BtB,GAAA,EJ7CS,GAAK,CCgBQ,CDhBN,AI6ChB,GH7BsB,ODhBM,AI6C5B,EH7BsB,ADhBoB,ECgBpB,CDRA,ECQA,IAAA,CDRA,GCQA,AG6BtB,KH7BsB,AG6BtB,EH7BsB,AG6BtB,EH7BsB,GDRA,AIqCtB,EAAA,GAAA,EAAA,CJrCsB,GIqCtB,CH7BsB,KAAA,CG6BtB,CH7BsB,EDRA,CCQA,ADRA,AIqCtB,EH7BsB,IG6BtB,CJrCsB,CCQA,EAAA,CD7BtB,AI0DA,GH7BsB,KD7BtB,EC6BsB,EGhCtB,OHgCsB,EAAA,AGhCN,EAAc,CHgCR,CGhCe,GAC/B,KH+BgB,CD7BtB,EAIA,AIPqC,CHgCf,GGhCe,EHgCf,EDzBtB,AIPqC,EAAA,KJOrC,EAIA,CCqBsB,EAAA,EAAA,EAAA,CDrBtB,ECqBsB,EAAA,UAAA,ADrBtB,EAIA,CIdO,EAAW,EH+BI,EAAA,CDjBtB,CIdkB,IAAI,CH+BA,KG/BM,EH+BN,CG9Bb,CJaT,ECiBsB,ADbtB,ECasB,EDbtB,AIjBS,EJiBT,AITA,MHsBsB,EAAA,CGtBN,EJYhB,AIZkC,EAAW,GAEtC,EHoBe,ADZpB,EITM,EHqBc,EGrBd,EHqBc,AGrBM,CJSP,ECYC,AGpBX,CJQU,CIRN,EAAG,EJQG,AIRC,CHoBA,CGpBG,IACrB,EJOiB,AIPf,GJMN,GAAsB,ECaA,EGnBO,IJMP,AINJ,EHmBI,AGnBqB,EAAI,GAEtC,OAAA,CHiBa,CAAA,AGftB,KJEsB,ECaA,ADRtB,EIPgB,EHJhB,ADWA,AIPuB,EJOvB,AIPkC,EHJlC,CGKS,CHLT,MGKS,CJgBP,CIhBa,EAAG,CHalB,EGbqB,GJgBnB,ECnBA,ADmBmB,AIhBK,GJgBL,CIdrB,IJcqB,CCnBS,GAAA,ADmBT,CIdL,CJeP,CIfc,EHLO,AGKQ,EJe7B,CIdA,GHNqB,EDoBb,CCtBjB,EDuBS,CCvBa,GGOC,CJgBd,GIhBc,CHPD,GGOC,EJgBH,AIhBG,GJkCvB,KCzCsB,AGOgB,EHYtC,ADSE,EAAA,AIrBoC,EHYtC,EAAA,AGZsC,EAAA,GAC7B,CJoBP,CIpBc,EHWhB,AGXoB,EAAS,CHW7B,IGRA,GJiBE,ECTF,IAAsB,AGRN,EAAY,CJiBb,CIjB6B,CJiBf,CIjBkC,CHQzC,CDUb,CIjBA,IJiBA,CCVa,EGPb,CHOa,CGPN,CHOM,ADUP,GAAQ,EIjBD,CHOA,ADapB,CIpB+B,CJoB/B,EIpBsC,CHOlB,IGPuB,GJoB3C,AIpBsD,KHOlC,EGJtB,GHI0E,EDaxE,IIjBc,CHIyC,CGJ5B,CHI4B,CGJjB,CHIiB,ADa3C,EIhBL,CHGiE,ADcjE,ECdT,CAAyD,EDchD,CCda,KGJkB,GHIlB,ADcJ,CIlBsB,IJkBjB,AIlBiB,EAAA,CJmBhC,EAAiB,EIlBhB,EAAE,CJmBL,EAAE,IChBc,CGHH,QAAS,CJmBJ,EInBiB,KJyBzC,EA9BA,AIOA,GJPsB,MION,EJPM,AIOW,EAAW,GACnC,OAAA,KAAK,GJRQ,GIQF,KAAK,SAAW,GAAK,EAGzC,SAAgB,EAAc,GACrB,OAAA,EAAM,EAAiB,EAAG,EAAM,SAIzC,SAAgB,EAAQ,EAAY,QAAA,IAAA,IAAA,EAAA,CAI9B,SAAS,EAAO,SAAS,EAAM,IAAI,IAEjC,IAAA,GADN,EAAM,EAAQ,CAAE,SAAS,EAAO,SAAS,EAAM,IAAI,GAAW,IACvC,SAAW,KAAK,MAAM,EAAK,KAC5C,EAAU,E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","file":"main.45a60a3a.map","sourceRoot":"../../../jsx-alone-dom-extra/src/__tests__/eventHandlers","sourcesContent":["import { JSXAloneComponent, NodeLike, ElementLike, TextNodeLike, RenderConfig } from '.'\r\nimport { ElementClassProps, ElementClass } from './elementClass';\r\nimport { ComponentClass, FunctionComponent } from './declarations/domElementDeclarations';\r\n\r\nexport function isElementClassConstructor(c: any): c is {new(props: ElementClassProps<any>): ElementClass} {\r\n  return c.prototype && c.prototype.render\r\n}\r\n\r\nexport function isNode<T>(n: any): n is NodeLike<T> {\r\n  return isTextNodeLike(n) || isElementLike(n)\r\n}\r\n\r\nexport function isElementLike<T>(n: any): n is ElementLike<T> {\r\n  return n && n.setAttribute\r\n}\r\n\r\nexport function isTextNodeLike<T>(n: any): n is TextNodeLike<T> {\r\n  return n && n.content && !isElementLike(n)\r\n}\r\n\r\nexport abstract class AbstractTextNodeLike<T> implements TextNodeLike<T> {\r\n  constructor(public content: string) {}\r\n  abstract render(config?: RenderConfig<T>): T\r\n}\r\n\r\nexport abstract class AbstractElementLike<T> implements ElementLike<T> {\r\n  // type: string | ComponentClass<P> | FunctionComponent<P>;\r\n  // props: P;\r\n  // key: Key | null;\r\n  attrs: {\r\n    [name: string]: any\r\n  }\r\n  children: NodeLike<T>[]\r\n  parentElement?: ElementLike<T>\r\n  \r\n  constructor(public tag: string) {\r\n    this.attrs = {}\r\n    this.children = []\r\n  }\r\n\r\n  abstract render(config?: RenderConfig<T>): T\r\n\r\n  setAttribute(name: string, value: string): void {\r\n    this.attrs[name] = value\r\n  }\r\n\r\n  appendChild(c: NodeLike<T>): void {\r\n    this.children.push(c)\r\n    if (isElementLike<T>(c)) {\r\n      c.parentElement = this\r\n    }\r\n  }\r\n  \r\n  abstract dangerouslySetInnerHTML(s: string): void\r\n  \r\n}\r\n","import { NodeLike, ElementLike } from './types';\r\nimport { isElementLike } from './elementImpl';\r\nimport { ReactNode } from './declarations/domElementDeclarations';\r\n\r\nexport type ElementClassProps<P> = ( Readonly<{ children?: ReactNode}>&Readonly<P> )\r\n\r\nexport interface IElementClass<P={}> {\r\n  props: ElementClassProps<P>\r\n  render(): JSX.Element\r\n}\r\n\r\n/**\r\n * A Class able to render() JSX. Similar to React.Component but only supporting properties, without state, context, ref, did/will methods, etc.\r\n */\r\nexport abstract class ElementClass<  P={}> implements IElementClass<P> {\r\n\r\n  constructor(public readonly props: ElementClassProps<P>) {\r\n  }\r\n\r\n  abstract render(): JSX.Element\r\n\r\n  // protected childrenAsArray(): NodeLike<P>[] {\r\n  //   return (Array.isArray(this.props.children) ? this.props.children : [this.props.children]) as NodeLike<P>[];\r\n  // }\r\n\r\n  // protected childrenElementsAsArray(): ElementLike<P>[] {\r\n  //   return this.childrenAsArray().filter(c => isElementLike<P>(c)) as ElementLike<P>[]\r\n  // }\r\n\r\n  // protected firstChildElement(): ElementLike<P> | undefined {\r\n  //   return this.childrenAsArray().find(e => true) as ElementLike<P> | undefined\r\n  // }\r\n}\r\nexport abstract class AbstractElementClass<P={}> extends ElementClass< P>{}\r\n","import { ElementClass } from './elementClass';\nimport { isElementClassConstructor, isNode } from './elementImpl';\nimport { CreateCreateElementConfig, ElementLike, JSXAlone, JSXAloneAttrs, JSXAloneTag } from './types';\n\n\nexport function createCreateElement<T, R extends ElementLike<T>=ElementLike<T>>(config: CreateCreateElementConfig<T, R>) {\n\n  const { impl, textNodeImpl, onElementReady, onElementCreated: onElementCreate } = config\n\n  const createElement: CreateElementFunction<T, R> = function (tag, attrs = {}, ...children: any[]) {\n    let element: R\n    let elementClassInstance: ElementClass | undefined\n    const tagIsString = typeof tag === 'string'\n\n    attrs = attrs || {}\n\n    if (tagIsString) {\n      element = new impl(tag as string)\n    }\n    else if (isElementClassConstructor(tag)) {\n      elementClassInstance = new tag({ ...attrs, children: children })\n      element = elementClassInstance.render() as any as R\n    }\n    else {\n      element = (tag as any)({ ...attrs, children })\n    }\n    if (onElementCreate) {\n      onElementCreate({ elementLike: element, elementClassInstance, attrs })\n    }\n\n    // HEADS UP non intrinsic els are responsible of rendering their own attributes and children\n    if (tagIsString) {\n\n      Object.keys(attrs).forEach(name => {\n        const value = attrs[name]\n        const type = typeof value\n        if (type === 'string' || type === 'number') {\n          element.setAttribute(name, value)\n        }\n        else if (type === 'function') {\n          element.setAttribute(name, value)\n        }\n        else if (value === false) {\n          // do nothing\n        }\n        else if (value === true) {\n          element.setAttribute(name, name)\n        }\n        else if (name === 'dangerouslySetInnerHTML' && value) {\n          element.dangerouslySetInnerHTML(value.__html)\n        }\n        else {\n          element.setAttribute(name, value)\n        }\n      })\n\n      children\n        .filter(c => c)\n        .forEach(child => {\n          if (isNode<T>(child)) {\n            element.appendChild(child)\n          } else if (Array.isArray(child)) {\n            child.forEach(c => {\n              if (isNode<T>(c)) {\n                element.appendChild(c)\n              }\n              else {\n                element.appendChild(new textNodeImpl(c))\n              }\n            })\n          } else {\n            element.appendChild(new textNodeImpl(child))\n          }\n        })\n    }\n\n    if (onElementReady) {\n      onElementReady({ elementLike: element })\n    }\n    return element\n  }\n  return createElement\n}\n\nexport const AbstractJSXAlone: JSXAlone<any> = null as any\n\nexport type CreateElementFunction<T, R=ElementLike<T>> = (\n  tag: JSXAloneTag,\n  attrs?: JSXAloneAttrs<string> | undefined,\n  ...children: any[]\n) => R\n\nconst throwOnUnrecognized = false\n\nexport function debug(err: string) {\n  if (throwOnUnrecognized) {\n    throw err\n  } else {\n    console.error(err)\n  }\n}","// import { AbstractJSXAlone as  } from './createElement';\nimport { ReactNode, AbstractJSXAlone as JSXAlone } from '.';\n\n\nexport type Children = ReactNode\n\n// export type Props = { children: Children }\n\n// TODO: like React.Fragment\nexport const Fragment = (props: { children: Children })=><span>{props.children}</span>\n\nexport function Js(props: {children: (...args: any[]) => any }) {\n  const r = props.children()\n  console.log(r);\n  return r ? <Fragment>{r}</Fragment> : null\n}\n\n\n/** if as statement. children need to be in a function and the function accepts a parameter which value is given condition `c` but casted to NotFalsy<C> so there's no need of type guards in the body. Example:\n```\n<If c={type}>{type =>\n  <select multiple={true}>{names[type].map(c =>\n      <option value={c.id}>{c.label}</option>)}\n  </select>\n</If>\n```\n\nNo error thrown on second line because parameter type is not falsy but keep the original type (excluding falsy values)\n\nOther example:\n\n```\nexport class ErrorComponent extends React.Component<ErrorOptions> {\n  public render() {\n    return <div>\n      <If c={this.props.error}>{error =>\n        <React.Fragment>\n          <h2>Error</h2>\n          <If c={typeof error === 'string'}>{e =>\n            <h3>{e}</h3>}\n          </If>\n          <If c={typeof error === 'object'}>{e =>\n            <React.Fragment>\n              <h5>{error!.name}</h5>\n              <p>{error!.message}</p>\n              <If c={error.stack}>{e =>\n                <ul>\n                  {e.split('\\n').map(e =>\n                    <li>{e}</li>)}\n                </ul>}\n              </If>\n            </React.Fragment>}\n          </If>\n          <If c={this.props.responseText}>{responseText =>\n            <iframe css={{ border: 0, width: '100%', height: '400px' }} srcDoc={responseText}>\n            </iframe>}\n          </If>\n        </React.Fragment>}\n      </If>\n    </div>\n  }\n}\n\n```\n*/\nexport function If<T extends any = any\n>(props: { c: any, p?: T, children: (...args: NotFalsy<T>[]) => JSX.Element }) {\n//TODO: issue in dom implementation, children is an array \nconst f = Array.isArray(props.children) ? props.children[0] : props.children\n  const { c, p } = props\n  if (isNotFalsy(c))\n    return f.apply(null, [...(p ? [p] : []), c ])\n  else {\n    return null\n  }\n}\ntype NotFalsy<C=any> = Exclude<C, Falsy>\ntype Falsy = null | '' | undefined | false\nfunction isNotFalsy<T>(a: T): a is NotFalsy<T> { return !!a }\n\nexport function getGlobal():any{\n  return (typeof window==='undefined' && typeof document==='undefined') ? global : window\n}\nexport function installJSXAloneAsGlobal(i: typeof JSXAlone){\n  getGlobal()['JSXAlone']=i\n}","\nexport function checkThrow<T>(r?: T, msg = 'Throwing on undefined value'): T {\n  if (!r) { throw new Error(msg) }\n  return r\n}\n// export function tryTo<F extends (...args: any[]) => any>(f: F): ReturnType<F> | undefined {\n//   try {\n//     return f()\n//   } catch (error) {\n//   }\n// }\nexport function array<T = number>(n: number, sample?: T): T[] {\n  const a: (T | number)[] = [];\n  for (let i = 0; i < n; i++) {\n    a.push(typeof sample === 'undefined' ? i : sample);\n  }\n  return a as T[];\n}\nexport function repeat(n: number, s: string): string {\n  return array(n, s).join('')\n}\nexport function indent(i: number = 1, tabSize = 2): string {\n  return repeat(i * tabSize, ' ')\n}\n\nexport function getPosition(string: string, subString: string, index: number) {\n  return string.split(subString, index).join(subString).length;\n}\n\nexport function removeWhites(s: string, replaceWith=' '){\n  return s.replace(/\\s+/gm, replaceWith).trim()\n}\nexport function randomIntBetween(a: number, b: number){\n  return Math.floor(Math.random() * b) + a\n}\n\nexport function randomItem<T>(array: T[]): T{\n  return array[randomIntBetween(0, array.length)]\n}\n\n\nexport function printMs(ms: number, config: {\n  minutes?: boolean;\n  seconds?: boolean;\n  ms?: boolean;\n} = { minutes: false, seconds: true, ms: true }) {\n  config = { ...{ minutes: false, seconds: true, ms: true }, ...config };\n  const seconds = config.seconds && Math.floor(ms / 1000);\n  const minutes = config.minutes && seconds && Math.floor(seconds / 60);\n  const milliseconds = config.ms && Math.floor(ms % 1000 || ms);\n  return `${minutes ? `${minutes} minutes ` : ''}${seconds ? `${seconds} seconds ` : ''}${milliseconds ? `${milliseconds} ms ` : ''}`;\n}\n\n\nexport function printStyleHtmlAttribute(value: any): any {\n  return `${Object.keys(value)\n    .map(p => `${p}: ${value[p]}`)\n    .join('; ')}`;\n}\n\n\nlet _unique: number = 0\nexport function unique(prefix: string='_'): string {\n  return prefix+_unique++\n}","import {  indent as indentImpl,  AbstractJSXAlone } from '.'\n\ndeclare const JSXAlone: typeof AbstractJSXAlone\n\n/** Render the <style> tag with all classes and styles inside. Usage example: \n```\nconst fieldTable: ClassRule = {\n  selectorPostfix: ' td',\n  border: '1px solid #aaaaaa',\n  padding: '2px'\n}\nconst sublistFieldTable: ClassRule = {\n  ...fieldTable,\n  fontSize: '0.95em',\n  border: '1px solid #ededed'\n}\nconst messageFromRedirect: ClassRule = {\n  border: '2px solid green'\n}\nconst { styles, classes } = Styles({ fieldTable, sublistFieldTable, messageFromRedirect})\nreturn <div>\n  <Style classes={styles}></Style>\n  <p className={classes.messageFromRedirect}>{props.msg}</p>\n    ```\n*/\nexport const Style = (props: StyleProps) => {\n  function indent(n: number): string {\n    return props.renderConfig && props.renderConfig.indent ? indentImpl(n) : ''\n  }\n  function fixProperty(s:string):string{\n    var t\n    while (t =  /([A-Z])/.exec(s)) {\n        s= s.substring(0, t.index)+'-'+t[1].toLowerCase()+s.substring(t.index+1, s.length)\n    }\n    return s;\n  }\n  // return new AbstractElementLike()\n\n  return <style>{Object.keys(props.classes).map(c =>\n    `${indent(1)}.${c}${(props.classes[c] && props.classes[c].selectorPostfix ? props.classes[c].selectorPostfix : '')} {${Object.keys(props.classes[c]).filter(p=>p!=='selectorPostfix').map(p =>`\n${indent(2)}${fixProperty(p)}: ${props.classes[c][p as any]};`\n).join(``)}\n}`).join('\\n')}\n  </style>\n}\n\n\n/** build a styles and classnames from a class styles mapped object so is easy to type-check classnames and use them . See `Style` for usage example */\nexport function Styles<T extends { [k: string]: ClassRule }>(styles: T): { styles: T, classes: { [k in keyof T]: k } } {\n  const classes: any = {}\n  Object.keys(styles).forEach(k => {\n    classes[k] = k\n  })\n  return {\n    styles, classes\n  }\n}\n\nexport type ClassRule = Partial<CSSStyleDeclaration> & { selectorPostfix?: string }\ninterface StyleProps {\n  classes: { [name: string]: ClassRule },\n  renderConfig?: {indent?: number}\n}","import { RenderConfig, ElementLike,  TextNodeLike } from './';\nimport { AbstractElementLike, AbstractTextNodeLike } from './';\nimport {  JSXAlone as JSXAloneType } from './';\nimport { createCreateElement } from './createElement';\nimport { AbstractElementClass } from './elementClass';\n\nexport interface JsonImplOutputEl {\n  tag: string\n  attrs: { [name: string]: any }\n  children: JsonImplOutput[]\n  innerHtml:string|undefined\n}\ninterface OutputText{\n  content?: string\n}\nexport type JsonImplOutput = JsonImplOutputEl|OutputText\n\nexport interface JsonImplRenderConfig extends RenderConfig<JsonImplOutput> {\n}\n\nexport class JsonImplElementLikeImpl extends AbstractElementLike<JsonImplOutput> implements ElementLike<JsonImplOutput> {\n  innerHtml:string|undefined\n  render(config: JsonImplRenderConfig = {}): JsonImplOutput {\n    return {\n      tag: this.tag,\n      innerHtml: this.innerHtml, \n      attrs: this.attrs,\n      children: this.children.map(c=>({...c,  parentElement: undefined})) as any\n    }\n  }\n\n  dangerouslySetInnerHTML(s: string): void {\n    this.innerHtml = s\n  }\n}\n\nexport class JsonImplTextNodeLikeImpl extends AbstractTextNodeLike<JsonImplOutput> implements TextNodeLike<JsonImplOutput> {\n  render(config?: JsonImplRenderConfig): JsonImplOutput {\n    return {content: this.content}\n  }\n}\n\nexport abstract class JsonImplElementClass<P = {}> extends AbstractElementClass< P> { }\n\nexport const JSXAloneJsonImpl:JSXAloneType<JsonImplOutput,  ElementLike<JsonImplOutput>> = {\n\n  createElement: createCreateElement<JsonImplOutput, JsonImplElementLikeImpl>({impl: JsonImplElementLikeImpl, textNodeImpl :JsonImplTextNodeLikeImpl}),\n\n  render(el, config = {}) {\n    return (el as any as JsonImplElementLikeImpl).render(config)\n  }\n\n}\n","export * from './types'\n\nexport * from './elementImpl'\n\nexport * from './declarations/domElementDeclarations'\nexport * from './declarations/cssDeclarations'\nexport * from './elementClass'\nexport * from './createElement'\n\nexport {AbstractTextNodeLike, AbstractElementLike} from './elementImpl'\nexport * from './misc'\nexport * from './util'\nexport * from './style'\nexport * from './JsonImpl'","import { unique } from 'jsx-alone-core';\n\n/** returns element mark, if it doesn't have one generates one. It adds an unique data-attribute */\nexport function markElement(e: HTMLElement, label = '_jsxa_') {\n  let key = e.getAttribute(`data-${label}`);\n  if (!key) {\n    key = unique(label);\n    e.setAttribute(`data-${label}`, key);\n  }\n  return key;\n}\nexport function getElementMark(e: HTMLElement, label = '_jsxa_') {\n  return e.getAttribute(`data-${label}`);\n}\nexport function isElementMarked(e: HTMLElement, label = '_jsxa_') {\n  return !!getElementMark(e, label);\n}\nexport function getMarkedElement<T extends Element = Element>(key: string, parent = document, label = '_jsxa_') {\n  return parent.querySelector<T>(getMarkSSelector(label, key));\n}\nexport function getMarkSSelector(label: string, key?: string): string {\n  return key ? `[data-${label}=\"${key}\"]` : `[data-${label}]`;\n}\n","import { RefObject, unique } from 'jsx-alone-core';\nimport { ElementClass } from '.';\nimport { ElementLike } from './types';\nimport { getMarkedElement, markElement } from './mark';\n\nexport class RefObjectImpl<T extends Element & ElementClass> implements RefObject<T> {\n  _current: T | string | null = null\n  public get current(): T | null {\n    return typeof this._current === 'string' ? getMarkedElement(this._current) : this._current\n  }\n}\n\n  // /** @internal */\nexport function setRef<T extends ElementClass & Element>({ el, value, elementLike }: { el: HTMLElement, value: RefObjectImpl<T>, elementLike: ElementLike }) {\n    // console.log('__addRef', elementLike._elementClassInstance || markElement(el));\n    value._current = elementLike._elementClassInstance || markElement(el) as any\n  }","import { getElementMark, markElement } from './mark';\nimport { unique } from 'jsx-alone-core';\n\nexport interface MEvent<C extends EventTarget | HTMLElement = any, T extends EventTarget | HTMLElement = any> extends Event {\n  currentTarget: C;\n  target: T;\n}\n\nexport type EventListener<C extends EventTarget | HTMLElement = any, T extends EventTarget | HTMLElement = any> = (e: MEvent) => any\n\ninterface Entry {\n  mark: string,\n  fn: EventListener\n  type: string\n  options?: boolean | AddEventListenerOptions\n}\n\n/** \n * Provides event delegation management to all nodes generated in a render() \n * call, using the root element (the one returned bu JSXAlone.render() call) to addEventListener\n * \n * TODO: remove registeredByType tp speed up - we dont really need that.\n * \n * TODO: options\n */\nexport class RootEventManager {\n\n  constructor(private root: HTMLElement) {\n    this.rootListener = this.rootListener.bind(this)\n  }\n\n  private registeredByType: { [type: string]: Entry[] } = {}\n\n  private mark = '_jsxa_e'+unique('_')\n  private markElement(el: HTMLElement) {\n    return markElement(el, this.mark)\n  }\n  private getElementMark(e: HTMLElement) {\n    return getElementMark(e, this.mark)\n  }\n\n  /** private handler for all events */\n  private rootListener(e: MEvent): any {\n    if (e.target) {\n      const mark = this.getElementMark(e.target)\n      const entry = mark && (this.registeredByType[e.type.toLowerCase()] || []).find(e => e.mark === mark)\n      if (entry) {\n        entry.fn(e)\n      }\n    }\n  }\n\n  addEventListener(el: HTMLElement, type: string, fn: EventListener) {\n    type = type.toLowerCase()\n    let ls = this.registeredByType[type]\n    if (!ls) {\n      ls = this.registeredByType[type] = []\n      this.root.addEventListener(type, this.rootListener) // \n    }\n    const mark = this.markElement(el)\n    let entry: Entry | undefined = ls.find(e => e.mark === mark)\n    if (!entry) {\n      entry = { mark, fn, type }\n      ls.push(entry)\n    }\n  }\n\n  /** removes event listeners for element inside root */\n  removeListeners(el: HTMLElement, types?: []) {\n    const mark = this.getElementMark(el);\n    if (mark) {\n      (types || Object.keys(this.registeredByType).map(t => t.toLowerCase())).forEach(t => {\n        this.registeredByType[t] = (this.registeredByType[t] || []).filter(e => e.mark !== mark)\n      })\n    }\n  }\n\n  uninstall(types?: []) {\n    (types || Object.keys(this.registeredByType).map(t => t.toLowerCase())).forEach(t => {\n      (this.registeredByType[t] || []).map(e => e.fn).forEach(listener => {\n        this.root.removeEventListener(t, listener)\n      })\n    })\n  }\n  \n}\n\n","import { createCreateElement, CreateElementFunction, CreateCreateElementConfig } from 'jsx-alone-core';\r\nimport {  ElementClass, getCreateCreateElementConfig, ElementLike, ElementLikeImpl, ElementLikeImplRenderConfig, RenderOutput, TextNodeLikeImpl, JSXAlone as JSXAloneBase} from 'jsx-alone-dom';\r\n\r\nexport const createCreateConfig: CreateCreateElementConfig<RenderOutput, ElementLike> = {\r\n  ...getCreateCreateElementConfig(),\r\n\r\n  impl: ElementLikeImpl,\r\n\r\n  textNodeImpl: TextNodeLikeImpl,\r\n}\r\n\r\nexport const JSXAlone    : typeof JSXAloneBase = {\r\n\r\n  createElement: createCreateElement<RenderOutput, ElementLike>(createCreateConfig),\r\n\r\n  render : JSXAloneBase.render,\r\n  createRef: JSXAloneBase.createRef\r\n  \r\n}\r\n\r\n\r\nexport { ElementClass };\r\n\r\n","import { ElementClass } from './'\n\nexport abstract class StatefulComponent<P = {}, S =P> extends ElementClass<P> {\n  state: S ={} as any\n\n  constructor(p: P) {\n    super(p)\n    this.state ={...(p as any)}\n  }\n\n  /** changes the state, clean up containerEl and renders the element again and append it to containerEl. \n   * Notice that descendant elements will be destroyed and */\n  setState(  s: Partial<S>) {\n    //@ts-ignore\n    this.state = { ...this.state, ...s }  \n  }\n\n}\n","import { JSXAlone } from './';\nimport { StatefulComponent } from './StatefulComponent';\n\n/** \n * implements stateful-ness by re-rendering it self again and again when the state changes. So it destroy its current\n * DOM nodes when the state changes and recreates them all again. Has some hacks to maintain current focus and children\n * state. \n *\n * Preserves focus. \n *\n * TODO: event listeners are not removed\n *\n * TODO: parent re-render actually resets the children (ISSUE)\n */\nexport abstract class DestructiveDomRenderComponent<P = {}, S = P> extends StatefulComponent<P, S> {\n  /** changes the state, clean up containerEl and renders the element again and append it to containerEl.\n   * Notice that descendant elements will be destroyed and */\n  setState(s: Partial<S>) {\n    super.setState(s);\n    if(!this.containerEl){\n      throw new Error('this.containerEl is undefined - cannot DestructiveDomRender')\n    }\n    let activePath: XPathResult | string | undefined;\n    let selection: {\n      start: number;\n      end: number;\n      direction?: string;\n    } = { start: 0, end: 0 };\n    if (document.activeElement) {\n      activePath = getXPathOfElement(document.activeElement);\n      selection = {\n        start: (document.activeElement as HTMLInputElement).selectionStart || 0,\n        end: (document.activeElement as HTMLInputElement).selectionEnd || 0,\n        direction: (document.activeElement as HTMLInputElement).selectionDirection || undefined\n      };\n    }\n    const jsx = this.render();\n    const el = JSXAlone.render(jsx);\n    this.containerEl.parentElement!.replaceChild(el, this.containerEl);\n    this.containerEl = el as HTMLElement;\n    if (activePath) {\n      const activeEl = getElementByXPath(activePath + '') as HTMLInputElement;\n      if (activeEl && selection) {\n        activeEl.focus();\n        if (activeEl.setSelectionRange) {\n          activeEl.setSelectionRange(selection.start, selection.end, selection.direction as any);\n        }\n      }\n    }\n  }\n}\n//  TODO: move to misc\nfunction getXPathOfElement(el: Element | string): string | undefined {\n  if (typeof el == 'string') {\n    return document.evaluate(el, document, null, 0, null) + '';\n  }\n  if (!el || el.nodeType != 1) {\n    return '';\n  }\n  if (el.id)\n    return \"//*[@id='\" + el.id + \"']\";\n  if (el.parentNode) {\n    const sames = Array.from(el.parentNode.children).filter(x => x.tagName == el.tagName);\n    return (getXPathOfElement(el.parentNode as Element) +\n      '/' +\n      (el.tagName || '').toLowerCase() +\n      (sames.length > 1 ? '[' + (sames.indexOf(el) + 1) + ']' : ''));\n  }\n  else {\n    return undefined;\n  }\n}\n//  TODO: move to misc\nfunction getElementByXPath(path: string, predicate?: (n: Node) => boolean): Node | undefined {\n  const p = document.evaluate(path, document, null, 0, null);\n  if (!predicate) {\n    return p.iterateNext();\n  }\n  try {\n    let n;\n    let n2;\n    while ((n = p.iterateNext()) && !predicate(n)) {\n      n2 = n;\n    }\n    return n2;\n  }\n  catch (e) {\n    alert('Error: Document tree modified during iteration ' + e);\n  }\n}\n","export * from './createElement'\nexport * from './StatefulComponent'\nexport * from './DestructiveDomRenderComponent'\n// export * from './UpdateDomComponent'","import { AbstractCoreMouseEvent, Children, MouseEvent, printMs} from 'jsx-alone-core'\nimport { ElementClass, JSXAlone } from '../..'\n\nclass Button extends ElementClass<{ onClick: (event: MouseEvent<HTMLButtonElement, AbstractCoreMouseEvent>) => void; children: string }> {\n  render() {\n    return <button onClick={this.props.onClick}>{this.props.children}</button>\n  }\n}\n\nclass Container extends ElementClass<{ children: Children }> {\n  render() {\n    return <div>{this.props.children}</div>\n  }\n}\n\nclass App extends ElementClass<{\n  name: string\n  tasks: string[]\n}> {\n  foo() {\n    return printMs(Date.now())\n  }\n  render() {\n    const foo = 'hello'\n    return (\n      <div>\n        <Container>\n          <p>\n            just some tests for function attributes context - most doesn't work because don't use extras, just core dom implementation\n            <button\n              onClick={e => {\n                console.log(this, this.props.name, this.foo(), foo)\n                // debugger\n              }}>\n              Render!\n            </button>\n            <Container>\n              <button\n                onClick={e => {\n                  console.log(this, this.props.name, this.foo(), foo)\n                  // debugger\n                }}>\n                sss!\n              </button>\n            </Container>\n            <Button\n              onClick={e => {\n                console.log(this, this.props.name, this.foo(), foo)\n                // debugger\n              }}>\n              second\n            </Button>\n          </p>\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst bar = 'bar'\n// render the App and append the generated element to body\nconst app = (\n  <div>\n    <button\n      onClick={e => {\n        //@ts-ignore\n        console.log(this, printMs(Date.now()), bar)\n      }}>\n      no root element class2\n    </button>\n\n    <Container>\n      <button\n        onClick={e => {\n          //@ts-ignore\n          console.log(this, printMs(Date.now()), bar)\n        }}>\n        should not override this with Container\n      </button>\n    </Container>\n\n    <App name=\"John Doe\" tasks={['Wash dishes', 'Go outside', 'Play soccer']} />\n  </div>\n)\nconst el = JSXAlone.render(app)\ndocument.body.appendChild(el)\n"]}