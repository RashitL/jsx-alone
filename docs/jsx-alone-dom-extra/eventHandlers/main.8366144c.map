{"version":3,"sources":["../../src/elementImpl.ts","../../src/elementClass.ts","../../src/createElement.ts","../../src/misc.tsx","../../src/util.ts","../../src/index.ts","../createElement.ts","../StatefulComponent.tsx","../DestructiveDomRenderComponent.tsx","../index.ts","main.tsx"],"names":[],"mappings":"AACA,AIqDA,IAAA,EAAA,GJrDgB,EAAoB,CIqDpC,EJpDS,GIoDT,IJpDS,EAAE,IIoDX,OJpDwB,EAAE,EIoD1B,OAAA,CJpDoC,CIoDpC,MJjDA,CIiDA,QJjDgB,AIiDhB,EJjD0B,GACjB,IIgDT,GJhDS,AIgDT,EJhDwB,EIgDxB,EJhD8B,EAAc,AIgD5C,EAAA,CJ7CA,CI6CA,EAAA,EAAA,IJ7CgB,EAAiB,GACxB,CI4CT,MJ5CS,CI4CT,EJ5Cc,AI4Cd,EJ5CgB,AI4ChB,IAAA,IAAA,IAAA,CJzCA,IIyCA,EAAA,GJzCgB,EAAkB,GACzB,EIwCT,GAAA,EJxCS,GAAK,EAAE,AIwChB,UJxC4B,AIwC5B,EJxC0C,GAQpB,OAAA,GIgCtB,KAAA,EAAA,KJhCsB,AIgCtB,EAAA,GAAA,EAAA,CJhCsB,GIgCtB,OAAA,GJhCsB,CAAA,AIgCtB,MAAA,CJhCsB,IArBtB,AIqDA,QJrDA,IIAA,SAAgB,EAAc,EAAO,GJArC,AICM,EJGN,MIJqC,EJIrC,EIJqC,IAAA,CJIrC,CIJqC,CJQrC,QAAA,cAAA,EAIA,OIXO,CJWP,CIXkB,MAAA,IAAI,IJWtB,EAKA,AIhB4B,GACnB,CJeT,EAAA,IIfS,EAQT,KJUA,IIVgB,EAAkB,CJQhC,CIR2C,GAEtC,IADC,CJOa,GAAA,AIPb,EAAoB,GJOP,AINV,EAAI,EAAG,EAAI,EJMD,AINI,GJKzB,CIJI,EJIkB,AIJhB,QJIgB,EIJO,IAAX,EAAyB,EAAI,GAEtC,OAAA,CJEa,CIAtB,CJIA,IAAA,EAAA,EIJgB,EAAO,EAAW,GACzB,EJUP,KIVO,EAAM,EJUb,AIVgB,EJUG,CIVA,EJUA,GIVK,EJUL,EIRrB,EJQqB,EACZ,KAAA,AITO,EAAO,EAAe,EJSrB,CIRR,EJSA,KAAA,KIVc,IJUH,AIVG,GJ+EvB,CI/EuB,EAAA,IJerB,EAAA,EIfoC,IAAA,IJepC,AIfoC,EAAA,GAC7B,EAAO,EAAI,EAAS,EJc3B,GIXF,MJWe,EAAc,CIXb,EJYP,AIZmB,EAAgB,EAAmB,CJYtD,EIXA,IJWM,GAAQ,AIXd,EAAO,CJcd,EAAA,GIdoB,EAAW,GAAO,EJc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","file":"main.8366144c.map","sourceRoot":"../../../jsx-alone-dom-extra/src/__tests__/eventHandlers","sourcesContent":["import { JSXAloneComponent, NodeLike, ElementLike, TextNodeLike, RenderConfig } from '.'\r\n\r\nexport function isJSXAloneComponent(c: any): c is JSXAloneComponent {\r\n  return c.prototype && c.prototype.render\r\n}\r\n\r\nexport function isNode<T>(n: any): n is NodeLike<T> {\r\n  return isTextNodeLike(n) || isElementLike(n)\r\n}\r\n\r\nexport function isElementLike<T>(n: any): n is ElementLike<T> {\r\n  return n && n.setAttribute\r\n}\r\n\r\nexport function isTextNodeLike<T>(n: any): n is TextNodeLike<T> {\r\n  return n && n.content && !isElementLike(n)\r\n}\r\n\r\nexport abstract class AbstractTextNodeLike<T> implements TextNodeLike<T> {\r\n  constructor(public content: string) {}\r\n  abstract render(config?: RenderConfig<T>): T\r\n}\r\n\r\nexport abstract class AbstractElementLike<T> implements ElementLike<T> {\r\n  attrs: {\r\n    [name: string]: any\r\n  }\r\n  children: NodeLike<T>[]\r\n  parentElement?: ElementLike<T>\r\n  \r\n  constructor(public tag: string) {\r\n    this.attrs = {}\r\n    this.children = []\r\n  }\r\n\r\n  abstract render(config?: RenderConfig<T>): T\r\n\r\n  setAttribute(name: string, value: string): void {\r\n    this.attrs[name] = value\r\n  }\r\n\r\n  appendChild(c: NodeLike<T>): void {\r\n    this.children.push(c)\r\n    if (isElementLike<T>(c)) {\r\n      c.parentElement = this\r\n    }\r\n  }\r\n  \r\n  abstract dangerouslySetInnerHTML(s: string): void\r\n  \r\n}\r\n","import { NodeLike, ElementLike } from './types';\r\nimport { isElementLike } from './elementImpl';\r\nimport { ReactNode } from './declarations/domElementDeclarations';\r\n\r\nexport type ElementClassProps<P> = ( Readonly<{ children?: ReactNode}>&Readonly<P> )\r\n\r\nexport interface IElementClass<P={}> {\r\n  props: ElementClassProps<P>\r\n  render(): JSX.Element\r\n}\r\n\r\n/**\r\n * A Class able to render() JSX. Similar to React.Component but only supporting properties, without state, context, ref, did/will methods, etc.\r\n */\r\nexport abstract class ElementClass<T, P={}> implements IElementClass<P> {\r\n\r\n  constructor(public readonly props: ElementClassProps<P>) {\r\n  }\r\n\r\n  abstract render(): JSX.Element\r\n\r\n  protected childrenAsArray(): NodeLike<P>[] {\r\n    return (Array.isArray(this.props.children) ? this.props.children : [this.props.children]) as NodeLike<P>[];\r\n  }\r\n\r\n  protected childrenElementsAsArray(): ElementLike<P>[] {\r\n    return this.childrenAsArray().filter(c => isElementLike<P>(c)) as ElementLike<P>[]\r\n  }\r\n\r\n  protected firstChildElement(): ElementLike<P> | undefined {\r\n    return this.childrenAsArray().find(e => true) as ElementLike<P> | undefined\r\n  }\r\n}\r\nexport abstract class AbstractElementClass<P={}> extends ElementClass<any, P>{}\r\n","import { AbstractElementLike, isJSXAloneComponent as isClassElementClass, isNode } from './elementImpl'\nimport { CreateCreateElementConfig, JSXAlone, JSXAloneAttrs, JSXAloneComponent, JSXAloneTag, ElementLike } from './types'\n\nconst throwOnUnrecognized = false\n\nexport function debug(err: string) {\n  if (throwOnUnrecognized) {\n    throw err\n  } else {\n    console.error(err)\n  }\n}\n\nexport function createCreateElement<T, R extends ElementLike<T>=ElementLike<T>>(config: CreateCreateElementConfig<T, R>) {\n  const { impl, textNodeImpl, onElementReady, onElementCreated: onElementCreate } = config\n\n  const createElement: CreateElementFunction<T,R> = function(tag, attrs = {}, ...children: any[]) {\n    let element:  R\n    let elementClassInstance: JSXAloneComponent | undefined\n    if (typeof tag === 'string') {\n      element = new impl(tag)\n    } else {\n      if (isClassElementClass(tag)) {\n        elementClassInstance = new tag({ ...attrs, children: children })\n        element = elementClassInstance.render()\n      } else {\n        if (typeof tag.prototype !== undefined) {\n          element = new (tag as any)({ ...attrs, children: children })\n        } else {\n          element = tag({ ...attrs, children: children })\n        }\n      }\n      attrs = {}\n    }\n    if (onElementCreate) {\n      onElementCreate({ elementLike: element, elementClassInstance })\n    }\n\n    // for (let name in attrs) {\n      Object.keys(attrs||{}).forEach(name=> {\n        const value = attrs[name]\n      // if (name && attrs.hasOwnProperty(name)) {\n        // let value: any = attrs[name]\n        const type = typeof value\n        if(type==='string' || type==='number'){\n          element.setAttribute(name, value)\n        }\n        else if (type === 'function') {\n          // if (!functionAttributes || functionAttributes === 'preserve') {\n            element.setAttribute(name, value)\n          // } \n          // else {\n          //   const code =\n          //     functionAttributes === 'toString-this'\n          //       ? `_this = __this__ = this; (${value.toString()}).apply(_this, arguments)`\n          //       : value.toString()\n          //   element.setAttribute(name,  code)\n          // }\n        }\n        else if(value===false){\n          // do nothing\n        }\n        else if(value===true) {\n          element.setAttribute(name, name)\n        }\n        // if (typeof value === 'boolean') {\n        //   if (value === true) {\n        //     element.setAttribute(name, name)\n        //   }\n        // }\n        // else\n        // else if (name === 'className') {\n          // if (name === 'className') {\n            // if (typeof value === 'string') {\n              // element.setAttribute('class', Array.isArray(value) ? value.join(' ') : value+'')\n            // } else if (Array.isArray(value) && value.length && typeof value[0] === 'string') {\n              // element.setAttribute('class', value.join(' '))\n            // } else {\n              // debug(`unrecognized className value ${typeof value} ${value}`)\n            // }\n          // } else {\n          //   element.setAttribute(name, value.toString())\n          // }\n        // }\n        // else if (typeof value === 'object') {\n          // if (name === 'style') { // TODO: performance - in DOM we dont need this - we directly assign the object  this is only neededd for string\n            // element.setAttribute(\n            //   'style',\n             \n            // )\n          // } \n          else if (name === 'dangerouslySetInnerHTML' && value) {\n            element.dangerouslySetInnerHTML(value.__html)\n          }\n          else {\n            element.setAttribute(name, value)\n          }\n          // else {\n          //   debug(`unrecognized object attribute \"${name}\" - the only object attribute supported is \"style\"`)\n          // }\n        // } else {\n        //   debug(`unrecognized attribute \"${name}\" with type ${typeof value}`)\n        // }\n      // }\n    // }\n  })\n\n\n    if (typeof tag === 'string') {\n      // don't render children for function or classes since they are responsible of render their own children\n      children\n        .filter(c => c)\n        .forEach(child => {\n          if (isNode<T>(child)) {\n            element.appendChild(child)\n          } else if (Array.isArray(child)) {\n            child.forEach(c => {\n              if (typeof c === 'string') {\n                element.appendChild(new textNodeImpl(c))\n              } else if (isNode<T>(c)) {\n                element.appendChild(c)\n              } else {\n                debug(`Child is not a node or string: ${c} , tag: ${tag}`)\n              }\n            })\n          } else {\n            element.appendChild(new textNodeImpl(child))\n          }\n        })\n    }\n    if (onElementReady) {\n      onElementReady({ elementLike: element })\n    }\n    return element\n  }\n  return createElement\n}\n\nexport const AbstractJSXAlone: JSXAlone<any> = null as any\n\nexport type CreateElementFunction<T, R=AbstractElementLike<T>> = (\n  tag: JSXAloneTag,\n  attrs?: JSXAloneAttrs<string> | undefined,\n  ...children: any[]\n) => R\n","// import { AbstractJSXAlone as  } from './createElement';\nimport { ReactNode, AbstractJSXAlone as JSXAlone } from '.';\n\n\nexport type Children = ReactNode\n\n// export type Props = { children: Children }\n\n// TODO: like React.Fragment\nexport const Fragment = (props: { children: Children })=><span>{props.children}</span>\n\nexport function Js(props: {children: (...args: any[]) => any }) {\n  const r = props.children()\n  console.log(r);\n  return r ? <Fragment>{r}</Fragment> : null\n}\n\n\n/** if as statement. children need to be in a function and the function accepts a parameter which value is given condition `c` but casted to NotFalsy<C> so there's no need of type guards in the body. Example:\n```\n<If c={type}>{type =>\n  <select multiple={true}>{names[type].map(c =>\n      <option value={c.id}>{c.label}</option>)}\n  </select>\n</If>\n```\n\nNo error thrown on second line because parameter type is not falsy but keep the original type (excluding falsy values)\n\nOther example:\n\n```\nexport class ErrorComponent extends React.Component<ErrorOptions> {\n  public render() {\n    return <div>\n      <If c={this.props.error}>{error =>\n        <React.Fragment>\n          <h2>Error</h2>\n          <If c={typeof error === 'string'}>{e =>\n            <h3>{e}</h3>}\n          </If>\n          <If c={typeof error === 'object'}>{e =>\n            <React.Fragment>\n              <h5>{error!.name}</h5>\n              <p>{error!.message}</p>\n              <If c={error.stack}>{e =>\n                <ul>\n                  {e.split('\\n').map(e =>\n                    <li>{e}</li>)}\n                </ul>}\n              </If>\n            </React.Fragment>}\n          </If>\n          <If c={this.props.responseText}>{responseText =>\n            <iframe css={{ border: 0, width: '100%', height: '400px' }} srcDoc={responseText}>\n            </iframe>}\n          </If>\n        </React.Fragment>}\n      </If>\n    </div>\n  }\n}\n\n```\n*/\nexport function If<T extends any = any\n>(props: { c: any, p?: T, children: (...args: NotFalsy<T>[]) => JSX.Element }) {\n//TODO: issue in dom implementation, children is an array \nconst f = Array.isArray(props.children) ? props.children[0] : props.children\n  const { c, p } = props\n  if (isNotFalsy(c))\n    return f.apply(null, [...(p ? [p] : []), c ])\n  else {\n    return null\n  }\n}\ntype NotFalsy<C=any> = Exclude<C, Falsy>\ntype Falsy = null | '' | undefined | false\nfunction isNotFalsy<T>(a: T): a is NotFalsy<T> { return !!a }\n\n","\nexport function checkThrow<T>(r?: T, msg = 'Throwing on undefined value'): T {\n  if (!r) { throw new Error(msg) }\n  return r\n}\n// export function tryTo<F extends (...args: any[]) => any>(f: F): ReturnType<F> | undefined {\n//   try {\n//     return f()\n//   } catch (error) {\n//   }\n// }\nexport function array<T = number>(n: number, sample?: T): T[] {\n  const a: (T | number)[] = [];\n  for (let i = 0; i < n; i++) {\n    a.push(typeof sample === 'undefined' ? i : sample);\n  }\n  return a as T[];\n}\nexport function repeat(n: number, s: string): string {\n  return array(n, s).join('')\n}\nexport function indent(i: number = 1, tabSize = 2): string {\n  return repeat(i * tabSize, ' ')\n}\n\nexport function getPosition(string: string, subString: string, index: number) {\n  return string.split(subString, index).join(subString).length;\n}\n\nexport function removeWhites(s: string, replaceWith=' '){\n  return s.replace(/\\s+/gm, replaceWith).trim()\n}\nexport function randomIntBetween(a: number, b: number){\n  return Math.floor(Math.random() * b) + a\n}\n\nexport function randomItem<T>(array: T[]): T{\n  return array[randomIntBetween(0, array.length)]\n}\n\n\nexport function printMs(ms: number, config: {\n  minutes?: boolean;\n  seconds?: boolean;\n  ms?: boolean;\n} = { minutes: false, seconds: true, ms: true }) {\n  config = { ...{ minutes: false, seconds: true, ms: true }, ...config };\n  const seconds = config.seconds && Math.floor(ms / 1000);\n  const minutes = config.minutes && seconds && Math.floor(seconds / 60);\n  const milliseconds = config.ms && Math.floor(ms % 1000 || ms);\n  return `${minutes ? `${minutes} minutes ` : ''}${seconds ? `${seconds} seconds ` : ''}${milliseconds ? `${milliseconds} ms ` : ''}`;\n}\n\n\nexport function printStyleHtmlAttribute(value: any): any {\n  return `${Object.keys(value)\n    .map(p => `${p}: ${value[p]}`)\n    .join('; ')}`;\n}\n","export * from './types'\n\nexport * from './elementImpl'\n\nexport * from './declarations/domElementDeclarations'\nexport * from './declarations/cssDeclarations'\nexport * from './elementClass'\nexport * from './createElement'\n\nexport {AbstractTextNodeLike, AbstractElementLike} from './elementImpl'\nexport * from './misc'\nexport * from './util'","import { createCreateElement, isElementLike, JSXAloneComponent, CreateElementFunction } from 'jsx-alone-core'\r\nimport {\r\n  createCreateElementConfig,\r\n  CreateCreateElementDomConfig,\r\n  ElementClass,\r\n  ElementLikeImpl,\r\n  ElementLikeImplRenderConfig,\r\n  TextNodeLikeImpl,\r\n  RenderOutput\r\n} from 'jsx-alone-dom'\r\n\r\ntype RenderFunction = (el: JSX.Element, config?: FunctionAttributeRenderConfig) => RenderOutput\r\ntype JSXAloneType = { render: RenderFunction; createElement: CreateElementFunction<RenderOutput, FunctionAttributesElement> }\r\n\r\nexport interface FunctionAttributesElement extends ElementLikeImpl {\r\n  _elementClassInstance?: ElementClass | undefined\r\n  // _originalElementClassInstance?: ElementClass | undefined\r\n  // _eventListenerList?: EventEntry[]\r\n  // isRoot():boolean\r\n}\r\n\r\n// class FunctionAttributesElementImpl extends ElementLikeImpl implements FunctionAttributesElement {\r\n//   _elementClassInstance: ElementClass | undefined\r\n//   _originalElementClassInstance: ElementClass | undefined\r\n//   /** if it has a defined list then we consider this node a root node and it will be responsible of collecting data for un registering event listener of all its \"tree\" \r\n//    * TODO: in the future we could also use the root for event delegation.\r\n//   */\r\n//   // _eventListenerList?: EventEntry[]\r\n//   // destroy() {\r\n\r\n//   // }\r\n//   // isRoot(){\r\n//   //   return this._eventListenerList\r\n//   // }\r\n// }\r\n\r\n// type EventEntry<K extends keyof HTMLElementEventMap =  keyof HTMLElementEventMap> = {\r\n//   type: K, \r\n//   listener: (this: HTMLElement, ev: HTMLElementEventMap[K] ) => any, \r\n//   options?: boolean | EventListenerOptions\r\n// }\r\n\r\nexport interface CreateCreateElementDomConfig<R extends FunctionAttributesElement = FunctionAttributesElement> extends CreateCreateElementDomConfig<R> {\r\n  extraRenderConfig?: ElementLikeImplRenderConfig\r\n}\r\n// let warn1Once = false\r\nexport interface FunctionAttributeRenderConfig extends ElementLikeImplRenderConfig {\r\n  dontAddEventListeners?: boolean\r\n  initialContext?: any\r\n}\r\nfunction buildExtraConfig(\r\n  rootElementLike: FunctionAttributesElement,\r\n  extraConfig: FunctionAttributeRenderConfig\r\n): ElementLikeImplRenderConfig<FunctionAttributesElement> {\r\n\r\n  const configHooks: ElementLikeImplRenderConfig<FunctionAttributesElement> = {\r\n    // handleAttribute({ value, el, attribute, elementLike }) {\r\n    //   if (typeof value === 'function' && !extraConfig.dontAddEventListeners) {\r\n    //     if (!warn1Once && typeof value.prototype !== 'undefined') {\r\n    //       console.warn('Warning, function attributes in a function are partially supported, `this` won\\'t be available.\\n Better use an arrow function!')\r\n    //       warn1Once = true // do this better with a helper\r\n    //     }\r\n    //     const { functionAttributeContext } = getFunctionAttributeContextObjects(elementLike, extraConfig.initialContext)\r\n    //     let listener = functionAttributeContext ? value.bind(functionAttributeContext) : value\r\n    //     const eventType = attribute.substring(2, attribute.length).toLowerCase() as keyof HTMLElementEventMap\r\n    //     const options = undefined\r\n    //     el.addEventListener(eventType, listener, options)\r\n\r\n    //     elementLike.attrs[attribute] = undefined // forget the reference\r\n    //     return true\r\n    //   }\r\n    //   return false\r\n    // },\r\n    // handleChildRender(config) {\r\n    //   const { child, parent, elementLike } = config\r\n    //   const { functionAttributeContext, elementClassInstance } = getFunctionAttributeContextObjects(\r\n    //     elementLike as FunctionAttributesElement,\r\n    //     extraConfig.initialContext\r\n    //   )\r\n    //   if (functionAttributeContext && isFunctionAttributeElement(child)) {\r\n    //     child._originalElementClassInstance = child._elementClassInstance\r\n    //     child._elementClassInstance = elementClassInstance || child._elementClassInstance\r\n    //   }\r\n    //   (child as ElementLikeImpl).render({ ...config, ...configHooks, parent })\r\n    //   return true\r\n    // },\r\n\r\n    handleAfterRender({ el, elementLike }: { el: HTMLElement; elementLike: FunctionAttributesElement }) {\r\n      const elementClassWithContainer =  elementLike._elementClassInstance || rootElementLike._elementClassInstance\r\n      if (elementClassWithContainer && elementClassWithContainer.setContainerEl) {\r\n        elementClassWithContainer.setContainerEl(el)\r\n      }\r\n      elementLike._elementClassInstance = undefined // forget the reference\r\n      // elementLike._originalElementClassInstance = undefined // forget the reference\r\n      return true\r\n    }\r\n  }\r\n\r\n  return configHooks\r\n\r\n  // function getFunctionAttributeContextObjects(elementLike: FunctionAttributesElement, initialContext: any) {\r\n  //   const elementClassInstance = (elementLike.parentElement && elementLike._elementClassInstance) || rootElementLike._elementClassInstance\r\n  //   return { functionAttributeContext: elementClassInstance || initialContext, elementClassInstance }\r\n  // }\r\n}\r\n\r\nexport const createCreateConfig: CreateCreateElementDomConfig<FunctionAttributesElement> = {\r\n  ...createCreateElementConfig,\r\n\r\n  impl: ElementLikeImpl as any as FunctionAttributesElement & { new(tag: string): FunctionAttributesElement },\r\n\r\n  textNodeImpl: TextNodeLikeImpl,\r\n\r\n  // evaluateFunctionsWithNew: true,\r\n\r\n  onElementCreated(config) {\r\n    if (config.elementClassInstance) {\r\n      config.elementLike._elementClassInstance = config.elementClassInstance as any\r\n    }\r\n  }\r\n}\r\n\r\nconst Module: JSXAloneType = {\r\n  createElement: createCreateElement<RenderOutput, FunctionAttributesElement>(createCreateConfig),\r\n\r\n  render(el, config: FunctionAttributeRenderConfig = {}) {\r\n    const elementLike: FunctionAttributesElement = el as any\r\n    return elementLike.render({ ...config, ...buildExtraConfig(elementLike, { initialContext: config.initialContext || this }) })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const JSXAlone: JSXAloneType = Module\r\n\r\n// function isFunctionAttributeElement(a: any): a is FunctionAttributesElement {\r\n//   return isElementLike(a)\r\n// }\r\n\r\nexport { ElementClass }\r\n","import { ElementClass } from './'\n\nexport abstract class StatefulComponent<P = {}, S ={}> extends ElementClass<P> {\n  state: S ={} as any\n\n  constructor(p: P) {\n    super(p)\n    this.state ={} as any\n  }\n  protected containerEl: HTMLElement = undefined as any\n\n  /** called by ElementLike.render() */\n  setContainerEl(el: HTMLElement) {\n    this.containerEl = el\n  }\n\n  /** changes the state, clean up containerEl and renders the element again and append it to containerEl. \n   * Notice that descendant elements will be destroyed and */\n  setState(  s: Partial<S>) {\n    //@ts-ignore\n    this.state = { ...this.state, ...s }  \n  }\n}\n\n \n","import { JSXAlone } from './';\nimport { StatefulComponent } from './StatefulComponent';\n/** implement stateful -ness by re-rendering it self agin and agin when the stat changes. Preserves focus.\n * TODO: parent re-render actually resets the children (ISSUE)\n */\nexport abstract class DestructiveDomRenderComponent<P = {}, S = Partial<P>> extends StatefulComponent<P, S> {\n  /** changes the state, clean up containerEl and renders the element again and append it to containerEl.\n   * Notice that descendant elements will be destroyed and */\n  setState(s: Partial<S>) {\n    super.setState(s);\n    let activePath: XPathResult | string | undefined;\n    let selection: {\n      start: number;\n      end: number;\n      direction?: string;\n    } = { start: 0, end: 0 };\n    if (document.activeElement) {\n      activePath = getXPathOfElement(document.activeElement);\n      selection = {\n        start: (document.activeElement as HTMLInputElement).selectionStart || 0,\n        end: (document.activeElement as HTMLInputElement).selectionEnd || 0,\n        direction: (document.activeElement as HTMLInputElement).selectionDirection || undefined\n      };\n    }\n    const jsx = this.render();\n    const el = JSXAlone.render(jsx, { initialContext: this });\n    this.containerEl.parentElement!.replaceChild(el, this.containerEl);\n    this.containerEl = el as HTMLElement;\n    if (activePath) {\n      const activeEl = getElementByXPath(activePath + '') as HTMLInputElement;\n      if (activeEl && selection) {\n        activeEl.focus();\n        if (activeEl.setSelectionRange) {\n          activeEl.setSelectionRange(selection.start, selection.end, selection.direction as any);\n        }\n      }\n    }\n  }\n}\n//  TODO: move to misc\nfunction getXPathOfElement(el: Element | string): string | undefined {\n  if (typeof el == 'string') {\n    return document.evaluate(el, document, null, 0, null) + '';\n  }\n  if (!el || el.nodeType != 1) {\n    return '';\n  }\n  if (el.id)\n    return \"//*[@id='\" + el.id + \"']\";\n  if (el.parentNode) {\n    const sames = Array.from(el.parentNode.children).filter(x => x.tagName == el.tagName);\n    return (getXPathOfElement(el.parentNode as Element) +\n      '/' +\n      (el.tagName || '').toLowerCase() +\n      (sames.length > 1 ? '[' + (sames.indexOf(el) + 1) + ']' : ''));\n  }\n  else {\n    return undefined;\n  }\n}\n//  TODO: move to misc\nfunction getElementByXPath(path: string, predicate?: (n: Node) => boolean): Node | undefined {\n  const p = document.evaluate(path, document, null, 0, null);\n  if (!predicate) {\n    return p.iterateNext();\n  }\n  try {\n    let n;\n    let n2;\n    while ((n = p.iterateNext()) && !predicate(n)) {\n      n2 = n;\n    }\n    return n2;\n  }\n  catch (e) {\n    alert('Error: Document tree modified during iteration ' + e);\n  }\n}\n","export * from './createElement'\nexport * from './StatefulComponent'\nexport * from './DestructiveDomRenderComponent'","import { AbstractCoreMouseEvent, Children, MouseEvent, printMs} from 'jsx-alone-core'\nimport { ElementClass, JSXAlone } from '../..'\n\nclass Button extends ElementClass<{ onClick: (event: MouseEvent<HTMLButtonElement, AbstractCoreMouseEvent>) => void; children: string }> {\n  render() {\n    return <button onClick={this.props.onClick}>{this.props.children}</button>\n  }\n}\n\nclass Container extends ElementClass<{ children: Children }> {\n  render() {\n    return <div>{this.props.children}</div>\n  }\n}\n\nclass App extends ElementClass<{\n  name: string\n  tasks: string[]\n}> {\n  foo() {\n    return printMs(Date.now())\n  }\n  render() {\n    const foo = 'hello'\n    return (\n      <div>\n        <Container>\n          <p>\n            just some tests for function attributes context - most doesn't work because don't use extras, just core dom implementation\n            <button\n              onClick={e => {\n                console.log(this, this.props.name, this.foo(), foo)\n                // debugger\n              }}>\n              Render!\n            </button>\n            <Container>\n              <button\n                onClick={e => {\n                  console.log(this, this.props.name, this.foo(), foo)\n                  // debugger\n                }}>\n                sss!\n              </button>\n            </Container>\n            <Button\n              onClick={e => {\n                console.log(this, this.props.name, this.foo(), foo)\n                // debugger\n              }}>\n              second\n            </Button>\n          </p>\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst bar = 'bar'\n// render the App and append the generated element to body\nconst app = (\n  <div>\n    <button\n      onClick={e => {\n        //@ts-ignore\n        console.log(this, printMs(Date.now()), bar)\n      }}>\n      no root element class2\n    </button>\n\n    <Container>\n      <button\n        onClick={e => {\n          //@ts-ignore\n          console.log(this, printMs(Date.now()), bar)\n        }}>\n        should not override this with Container\n      </button>\n    </Container>\n\n    <App name=\"John Doe\" tasks={['Wash dishes', 'Go outside', 'Play soccer']} />\n  </div>\n)\nconst el = JSXAlone.render(app)\ndocument.body.appendChild(el)\n"]}