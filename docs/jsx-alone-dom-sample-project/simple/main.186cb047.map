{"version":3,"sources":["../../src/elementImpl.ts","../../src/elementClass.ts","../../src/createElement.ts","../../src/misc.tsx","../../src/util.ts","../../src/index.ts","main.tsx"],"names":[],"mappings":"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","file":"main.186cb047.map","sourceRoot":"../../../jsx-alone-dom-sample-project/src/simple","sourcesContent":["import { JSXAloneComponent, NodeLike, ElementLike, TextNodeLike, RenderConfig } from '.'\r\nexport function isJSXAloneComponent(c: any): c is JSXAloneComponent {\r\n  return c.prototype && c.prototype.render\r\n}\r\n\r\nexport function isNode<T>(n: any): n is NodeLike<T> {\r\n  return isTextNodeLike(n) || isElementLike(n)\r\n}\r\n\r\nexport function isElementLike<T>(n: any): n is ElementLike<T> {\r\n  return n && n.setAttribute\r\n}\r\n\r\nexport function isTextNodeLike<T>(n: any): n is TextNodeLike<T> {\r\n  return n && n.content && !isElementLike(n)\r\n}\r\n\r\n\r\nexport abstract class AbstractTextNodeLike<T> implements TextNodeLike<T> {\r\n  constructor(public content: string) {}\r\n  abstract render(config?: RenderConfig<T>): T\r\n}\r\nexport abstract class AbstractElementLike<T> implements ElementLike<T> {\r\n  attrs: {\r\n    [name: string]: any\r\n  }\r\n  children: NodeLike<T>[]\r\n  parentElement?: ElementLike<T>\r\n  \r\n  constructor(public tag: string) {\r\n    this.attrs = {}\r\n    this.children = []\r\n  }\r\n\r\n  abstract render(config?: RenderConfig<T>): T\r\n\r\n  setAttribute(name: string, value: string): void {\r\n    this.attrs[name] = value\r\n  }\r\n\r\n  appendChild(c: NodeLike<T>): void {\r\n    this.children.push(c)\r\n    if (isElementLike<T>(c)) {\r\n      c.parentElement = this\r\n    }\r\n  }\r\n  \r\n  abstract dangerouslySetInnerHTML(s: string): void\r\n\r\n    // abstract destroy():void\r\n  // findDescendant(p: Predicate<T>): ElementLike<T> | undefined {\r\n  //   let found: ElementLike<T> | undefined\r\n  //   this.children.some(c => {\r\n  //     if (isElementLike<T>(c)) {\r\n  //       if (p(c)) {\r\n  //         found = c\r\n  //       }\r\n  //       else {\r\n  //         found = c.findDescendant(p)\r\n  //       }\r\n  //     }\r\n  //     return !!found\r\n  //   })\r\n  //   return found\r\n  // }\r\n\r\n  // findAscendant(p: Predicate<T>): ElementLike<T> | undefined {\r\n  //   if (this.parentElement) {\r\n  //     if (p(this.parentElement)) {\r\n  //       return this.parentElement\r\n  //     }\r\n  //     return this.parentElement.findAscendant(p)\r\n  //   }\r\n  // }\r\n\r\n  // getAscendants(): ElementLike<T>[]  {\r\n  //   return this.parentElement ? [...this.parentElement.getAscendants(), this.parentElement] : []\r\n  // }\r\n\r\n  // getRootAscendant(): ElementLike<T> {\r\n  //   const r =  this.parentElement ? this.findAscendant(n=>isElementLike(n) && !n.parentElement) : this\r\n  //   return checkThrow(r, 'No root ascendant found in element like tree!')\r\n  // }\r\n\r\n  // getSiblings(): NodeLike<T>[]{\r\n  //   if(this.parentElement){\r\n  //     return this.parentElement.children.filter(c=>c!==this)\r\n  //   }\r\n  //   return []\r\n  // }\r\n\r\n  // findSibling(p: Predicate<T>): NodeLike<T> | undefined {\r\n  //   return this.getSiblings().find(p)\r\n  // }\r\n\r\n  // find(p: Predicate<T>): NodeLike<T>|undefined {\r\n  //   // TODO: this should start searching in the near children, sibling and parents, and only after that look on far nodes\r\n  //   return this.getRootAscendant().findDescendant(p)\r\n  // }\r\n  \r\n}\r\n","import { NodeLike, ElementLike } from './types';\r\nimport { isElementLike } from './elementImpl';\r\nimport { ReactNode } from './declarations/domElementDeclarations';\r\n\r\nexport type ElementClassProps<P> = ( Readonly<{ children?: ReactNode}>&Readonly<P> )\r\n\r\nexport interface IElementClass<P={}> {\r\n  props: ElementClassProps<P>\r\n  render(): JSX.Element\r\n}\r\n\r\n/**\r\n * A Class able to render() JSX. Similar to React.Component but only supporting properties, without state, context, ref, did/will methods, etc.\r\n */\r\nexport abstract class ElementClass<T, P={}> implements IElementClass<P> {\r\n\r\n  constructor(public readonly props: ElementClassProps<P>) {\r\n  }\r\n\r\n  abstract render(): JSX.Element\r\n\r\n  protected childrenAsArray(): NodeLike<P>[] {\r\n    return (Array.isArray(this.props.children) ? this.props.children : [this.props.children]) as NodeLike<P>[];\r\n  }\r\n\r\n  protected childrenElementsAsArray(): ElementLike<P>[] {\r\n    return this.childrenAsArray().filter(c => isElementLike<P>(c)) as ElementLike<P>[]\r\n  }\r\n\r\n  protected firstChildElement(): ElementLike<P> | undefined {\r\n    return this.childrenAsArray().find(e => true) as ElementLike<P> | undefined\r\n  }\r\n}\r\nexport abstract class AbstractElementClass<P={}> extends ElementClass<any, P>{}\r\n","import { AbstractElementLike, isJSXAloneComponent as isClassElementClass, isNode } from './elementImpl'\nimport { CreateCreateElementConfig, JSXAlone, JSXAloneAttrs, JSXAloneComponent, JSXAloneTag, ElementLike } from './types'\n\nconst throwOnUnrecognized = false\n\nexport function debug(err: string) {\n  if (throwOnUnrecognized) {\n    throw err\n  } else {\n    console.error(err)\n  }\n}\n\nexport function createCreateElement<T, R extends ElementLike<T>=ElementLike<T>>(config: CreateCreateElementConfig<T, R>) {\n  const { impl, textNodeImpl, onElementReady, onElementCreated: onElementCreate } = config\n\n  const createElement: CreateElementFunction<T,R> = function(tag, attrs = {}, ...children: any[]) {\n    let element:  R\n    let elementClassInstance: JSXAloneComponent | undefined\n    if (typeof tag === 'string') {\n      element = new impl(tag)\n    } else {\n      if (isClassElementClass(tag)) {\n        elementClassInstance = new tag({ ...attrs, children: children })\n        element = elementClassInstance.render()\n      } else {\n        if (typeof tag.prototype !== undefined && config.evaluateFunctionsWithNew) {\n          element = new (tag as any)({ ...attrs, children: children })\n        } else {\n          element = tag({ ...attrs, children: children })\n        }\n      }\n      attrs = {}\n    }\n    if (onElementCreate) {\n      onElementCreate({ elementLike: element, elementClassInstance })\n    }\n\n    // for (let name in attrs) {\n      Object.keys(attrs||{}).forEach(name=> {\n        const value = attrs[name]\n      // if (name && attrs.hasOwnProperty(name)) {\n        // let value: any = attrs[name]\n        const type = typeof value\n        if(type==='string' || type==='number'){\n          element.setAttribute(name, value)\n        }\n        else if (type === 'function') {\n          // if (!functionAttributes || functionAttributes === 'preserve') {\n            element.setAttribute(name, value)\n          // } \n          // else {\n          //   const code =\n          //     functionAttributes === 'toString-this'\n          //       ? `_this = __this__ = this; (${value.toString()}).apply(_this, arguments)`\n          //       : value.toString()\n          //   element.setAttribute(name,  code)\n          // }\n        }\n        else if(value===false){\n          // do nothing\n        }\n        else if(value===true) {\n          element.setAttribute(name, name)\n        }\n        // if (typeof value === 'boolean') {\n        //   if (value === true) {\n        //     element.setAttribute(name, name)\n        //   }\n        // }\n        // else\n        // else if (name === 'className') {\n          // if (name === 'className') {\n            // if (typeof value === 'string') {\n              // element.setAttribute('class', Array.isArray(value) ? value.join(' ') : value+'')\n            // } else if (Array.isArray(value) && value.length && typeof value[0] === 'string') {\n              // element.setAttribute('class', value.join(' '))\n            // } else {\n              // debug(`unrecognized className value ${typeof value} ${value}`)\n            // }\n          // } else {\n          //   element.setAttribute(name, value.toString())\n          // }\n        // }\n        // else if (typeof value === 'object') {\n          // if (name === 'style') { // TODO: performance - in DOM we dont need this - we directly assign the object  this is only neededd for string\n            // element.setAttribute(\n            //   'style',\n             \n            // )\n          // } \n          else if (name === 'dangerouslySetInnerHTML' && value) {\n            element.dangerouslySetInnerHTML(value.__html)\n          }\n          else {\n            element.setAttribute(name, value)\n          }\n          // else {\n          //   debug(`unrecognized object attribute \"${name}\" - the only object attribute supported is \"style\"`)\n          // }\n        // } else {\n        //   debug(`unrecognized attribute \"${name}\" with type ${typeof value}`)\n        // }\n      // }\n    // }\n  })\n\n\n    if (typeof tag === 'string') {\n      // don't render children for function or classes since they are responsible of render their own children\n      children\n        .filter(c => c)\n        .forEach(child => {\n          if (isNode<T>(child)) {\n            element.appendChild(child)\n          } else if (Array.isArray(child)) {\n            child.forEach(c => {\n              if (typeof c === 'string') {\n                element.appendChild(new textNodeImpl(c))\n              } else if (isNode<T>(c)) {\n                element.appendChild(c)\n              } else {\n                debug(`Child is not a node or string: ${c} , tag: ${tag}`)\n              }\n            })\n          } else {\n            element.appendChild(new textNodeImpl(child))\n          }\n        })\n    }\n    if (onElementReady) {\n      onElementReady({ elementLike: element })\n    }\n    return element\n  }\n  return createElement\n}\n\nexport const AbstractJSXAlone: JSXAlone<any> = null as any\n\nexport type CreateElementFunction<T, R=AbstractElementLike<T>> = (\n  tag: JSXAloneTag,\n  attrs?: JSXAloneAttrs<string> | undefined,\n  ...children: any[]\n) => R\n","// import { AbstractJSXAlone as  } from './createElement';\nimport { ReactNode, AbstractJSXAlone as JSXAlone } from '.';\n\n\nexport type Children = ReactNode\n\n// export type Props = { children: Children }\n\n// TODO: like React.Fragment\nexport const Fragment = (props: { children: Children })=><span>{props.children}</span>\n\nexport function Js(props: {children: (...args: any[]) => any }) {\n  const r = props.children()\n  console.log(r);\n  return r ? <Fragment>{r}</Fragment> : null\n}\n\n\n/** if as statement. children need to be in a function and the function accepts a parameter which value is given condition `c` but casted to NotFalsy<C> so there's no need of type guards in the body. Example:\n```\n<If c={type}>{type =>\n  <select multiple={true}>{names[type].map(c =>\n      <option value={c.id}>{c.label}</option>)}\n  </select>\n</If>\n```\n\nNo error thrown on second line because parameter type is not falsy but keep the original type (excluding falsy values)\n\nOther example:\n\n```\nexport class ErrorComponent extends React.Component<ErrorOptions> {\n  public render() {\n    return <div>\n      <If c={this.props.error}>{error =>\n        <React.Fragment>\n          <h2>Error</h2>\n          <If c={typeof error === 'string'}>{e =>\n            <h3>{e}</h3>}\n          </If>\n          <If c={typeof error === 'object'}>{e =>\n            <React.Fragment>\n              <h5>{error!.name}</h5>\n              <p>{error!.message}</p>\n              <If c={error.stack}>{e =>\n                <ul>\n                  {e.split('\\n').map(e =>\n                    <li>{e}</li>)}\n                </ul>}\n              </If>\n            </React.Fragment>}\n          </If>\n          <If c={this.props.responseText}>{responseText =>\n            <iframe css={{ border: 0, width: '100%', height: '400px' }} srcDoc={responseText}>\n            </iframe>}\n          </If>\n        </React.Fragment>}\n      </If>\n    </div>\n  }\n}\n\n```\n*/\nexport function If<T extends any = any\n>(props: { c: any, p?: T, children: (...args: NotFalsy<T>[]) => JSX.Element }) {\n//TODO: issue in dom implementation, children is an array \nconst f = Array.isArray(props.children) ? props.children[0] : props.children\n  const { c, p } = props\n  if (isNotFalsy(c))\n    return f.apply(null, [...(p ? [p] : []), c ])\n  else {\n    return null\n  }\n}\ntype NotFalsy<C=any> = Exclude<C, Falsy>\ntype Falsy = null | '' | undefined | false\nfunction isNotFalsy<T>(a: T): a is NotFalsy<T> { return !!a }\n\n","\nexport function checkThrow<T>(r?: T, msg = 'Throwing on undefined value'): T {\n  if (!r) { throw new Error(msg) }\n  return r\n}\n// export function tryTo<F extends (...args: any[]) => any>(f: F): ReturnType<F> | undefined {\n//   try {\n//     return f()\n//   } catch (error) {\n//   }\n// }\nexport function array<T = number>(n: number, sample?: T): T[] {\n  const a: (T | number)[] = [];\n  for (let i = 0; i < n; i++) {\n    a.push(typeof sample === 'undefined' ? i : sample);\n  }\n  return a as T[];\n}\nexport function repeat(n: number, s: string): string {\n  return array(n, s).join('')\n}\nexport function indent(i: number = 1, tabSize = 2): string {\n  return repeat(i * tabSize, ' ')\n}\n\nexport function getPosition(string: string, subString: string, index: number) {\n  return string.split(subString, index).join(subString).length;\n}\n\nexport function removeWhites(s: string, replaceWith=' '){\n  return s.replace(/\\s+/gm, replaceWith).trim()\n}\nexport function randomIntBetween(a: number, b: number){\n  return Math.floor(Math.random() * b) + a\n}\n\nexport function randomItem<T>(array: T[]): T{\n  return array[randomIntBetween(0, array.length)]\n}\n\n\nexport function printMs(ms: number, config: {\n  minutes?: boolean;\n  seconds?: boolean;\n  ms?: boolean;\n} = { minutes: false, seconds: true, ms: true }) {\n  config = { ...{ minutes: false, seconds: true, ms: true }, ...config };\n  const seconds = config.seconds && Math.floor(ms / 1000);\n  const minutes = config.minutes && seconds && Math.floor(seconds / 60);\n  const milliseconds = config.ms && Math.floor(ms % 1000 || ms);\n  return `${minutes ? `${minutes} minutes ` : ''}${seconds ? `${seconds} seconds ` : ''}${milliseconds ? `${milliseconds} ms ` : ''}`;\n}\n","export * from './types'\n\nexport * from './elementImpl'\n\nexport * from './declarations/domElementDeclarations'\nexport * from './declarations/cssDeclarations'\nexport * from './elementClass'\nexport * from './createElement'\n\nexport {AbstractTextNodeLike, AbstractElementLike} from './elementImpl'\nexport * from './misc'\nexport * from './util'","import { JSXAlone, ElementClass } from 'jsx-alone-dom';\n\n// example function element\nconst TaskPageLink = (props: {\n  children: string;\n  task: string;\n}) => <a href={`pages/tasks/${props.task}_small.html`}>{props.children}</a>;\n\n// example class element that renders given information and uses previous TaskPageLink element\nclass App extends ElementClass<{\n  name: string;\n  tasks: string[];\n}> {\n  render() {\n    return <article>\n      <h3>Welcome {this.props.name}!</h3>\n      <p>These are your tasks:</p>\n      <ul>{this.props.tasks.map(task => <li>\n        <TaskPageLink task={task}>{task}</TaskPageLink>\n      </li>)}\n      </ul>\n    </article>;\n  }\n}\n\n// render the App and append the generated element to body\nconst app = <App name=\"John Doe\" tasks={['Wash dishes', 'Go outside', 'Play soccer']} />;\nconst el = JSXAlone.render(app);\ndocument.body.appendChild(el)\n\n"]}